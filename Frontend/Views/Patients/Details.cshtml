@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PatientViewModel

@{
    Layout = "_Layout";
}

<!DOCTYPE html>

<html lang="fr" xml:lang="fr">
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>Détails du Patient</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
</head>

<body>

<div class="container mt-4">
    <h4 class="mb-3">Détails du Patient</h4>
    <div class="card p-3 mb-4">
        <dl class="row mb-0">
            <dt class="col-sm-3">Prénom</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.FirstName)</dd>
            <dt class="col-sm-3">Nom</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.LastName)</dd>
            <dt class="col-sm-3">Date de naissance</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.DateOfBirth)</dd>
            <dt class="col-sm-3">Genre</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Gender)</dd>
            <dt class="col-sm-3">Adresse</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Address)</dd>
            <dt class="col-sm-3">Téléphone</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.PhoneNumber)</dd>
        </dl>
        <hr/>
        <h5 class="mt-3">Risque de Diabète</h5>
        @{
            DiabetesRisk? diabetesRisk = Model.DiabetesRiskPrediction?.DiabetesRisk;
        }

        <p class="fw-bold @(diabetesRisk != null ? GetRiskClass(diabetesRisk) : "")">
            @Html.DisplayFor(model => diabetesRisk)
        </p>
    </div>

    @if (Model.Notes != null)
    {
        <h5>Notes</h5>
        @foreach (Note note in Model.Notes)
        {
            <div class="card p-3 mb-3">
                <h6 class="mb-1 text-primary">Titre</h6>
                <p>@Html.DisplayFor(_ => note.Title)</p>

                <h6 class="mb-1 text-primary">Contenu</h6>
                <p>@Html.Raw(note.Body?.Replace("\n", "<br>"))</p>

                <h6 class="mb-1 text-primary">Date de mise à jour</h6>
                <p>@(note.LastUpdatedDate?.ToString("dd/MM/yyyy HH:mm") ?? (note.CreatedDate?.ToString("dd/MM/yyyy HH:mm") ?? "Inconnu"))</p>

                <h6 class="mb-1 text-primary">Créateur</h6>
                <p>@(note.Creator != null ? note.Creator : "Inconnu")</p>

                <div>
                    <a asp-controller="Notes" asp-action="Edit" asp-route-id="@note.Id"
                       class="btn btn-sm btn-warning me-2">Éditer</a>
                    <a asp-controller="Notes" asp-action="Delete" asp-route-id="@note.Id" class="btn btn-sm btn-danger">Supprimer</a>
                </div>
            </div>
        }
    }

    <div class="mt-4">
        <a asp-action="Edit" asp-route-id="@Model.PatientId" class="btn btn-primary">Éditer le patient</a>
        <a asp-controller="Patients" asp-action="Delete" asp-route-id="@Model.PatientId" class="btn btn-danger mx-1">
            <i class="fas fa-trash"></i> Supprimer le patient
        </a>
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary ms-2">Retour à la liste</a>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

@functions {
    private static string GetRiskClass(DiabetesRisk? risk)
    {
        return risk switch
        {
            DiabetesRisk.None       => "text-success", // Vert
            DiabetesRisk.Borderline => "text-warning", // Jaune
            DiabetesRisk.InDanger   => "text-danger", // Rouge clair
            DiabetesRisk.EarlyOnset => "bg-danger text-white", // Rouge foncé avec texte blanc
            _                       => "text-muted" // Couleur par défaut
        };
    }
}

</body>
</html>