@model TriggerWordsViewModel

@{
    ViewData["Title"] = "Configuration des mots déclencheurs";
}

<div class="container">
    <div class="mb-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Retour à l'accueil
        </a>
    </div>

    <h2 class="mb-4">@ViewData["Title"]</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form id="triggerWordsForm" asp-action="SaveTriggerWords" method="post" onsubmit="return validateForm()">
        <div id="triggerWordsList" class="mb-4">
            @foreach (var word in Model.TriggerWords)
            {
                <div class="input-group mb-2">
                    <input type="text" name="triggerWords" class="form-control" value="@word" required minlength="2" />
                    <button type="button" class="btn btn-danger" onclick="removeWord(this)">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            }
        </div>

        <div class="mb-4">
            <button type="button" class="btn btn-success" onclick="addWord()">
                <i class="bi bi-plus-lg"></i> Ajouter un mot
            </button>
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-save"></i> Sauvegarder
            </button>
            <button type="button" class="btn btn-warning" onclick="resetWords()">
                <i class="bi bi-arrow-counterclockwise"></i> Réinitialiser
            </button>
        </div>
    </form>

    <form id="resetForm" asp-action="Reset" method="post" class="d-none"></form>
</div>

@section Scripts {
    <script>
        function addWord() {
            const container = document.getElementById('triggerWordsList');
            const div = document.createElement('div');
            div.className = 'input-group mb-2';
            div.innerHTML = `
                <input type="text" name="triggerWords" class="form-control" required minlength="2" />
                <button type="button" class="btn btn-danger" onclick="removeWord(this)">
                    <i class="bi bi-trash"></i>
                </button>
            `;
            container.appendChild(div);
            div.querySelector('input').focus();
        }

        function removeWord(button) {
            const container = document.getElementById('triggerWordsList');
            if (container.children.length > 1) {
                button.closest('.input-group').remove();
            } else {
                alert('Vous devez garder au moins un mot déclencheur.');
            }
        }

        function resetWords() {
            if (confirm('Êtes-vous sûr de vouloir réinitialiser les mots déclencheurs ? Cette action ne peut pas être annulée.')) {
                document.getElementById('resetForm').submit();
            }
        }

        function validateForm() {
            const inputs = document.querySelectorAll('#triggerWordsList input[name="triggerWords"]');
            const words = new Set(Array.from(inputs).map(input => input.value.trim()));
            
            if (words.size !== inputs.length) {
                alert('Attention : certains mots sont en double. Veuillez les modifier.');
                return false;
            }
            
            if (words.has('')) {
                alert('Tous les champs doivent être remplis.');
                return false;
            }
            
            return true;
        }
    </script>
}
